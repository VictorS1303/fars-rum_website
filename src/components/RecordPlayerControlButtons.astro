---
const controlButtonNames = ['fa-solid fa-play', 'fa-solid fa-stop']

const controlButtons = controlButtonNames.map((controlButtonName) => ({
    controlButton: controlButtonName
}))

console.log(controlButtons)
---

<div class="control-buttons-container" id="control-buttons-container">
    {controlButtons.map((controlButton) => (
        <i class={controlButton.controlButton}></i>
    ))}
</div>

<style>
    .control-buttons-container
    {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        height: 100%;
        gap: 20px;
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translate(-50%, -50%);
        height: 30px;
        width: 100px;
        font-size: 25px;
        color: var(--record-player-control-buttons-color);
        cursor: pointer;
    }

    @media screen and (min-width: 768px)
    {   
        .control-buttons-container
        {
           left: 90%;
           bottom: 0px;
        }
    }
</style>

<script>
    const albumSelectContainer = document.querySelector('.album-select-container')
    const controlButtonsContainer = document.querySelector('.control-buttons-container');
    const currentAlbumImage = document.querySelector('#current_album_image') as HTMLImageElement
    const albumAudio = document.createElement('audio')
    const closeTurntableModalBtn = document.querySelector('#turntable_modal_close_button')

    
    controlButtonsContainer.addEventListener('click', (e) => toggleAudioPlayState(e));
    albumSelectContainer.addEventListener('click', (e) => changeAlbum(e))
    closeTurntableModalBtn.addEventListener('click',(e) => closeTurntableModal(e))


    function toggleAudioPlayState(e: any)
    {
        if (e.target.classList.contains('fa-play'))
        {
            playAudio(e)
            albumSelectContainer.style.pointerEvents = 'none'
        }
        else if(e.target.classList.contains('fa-pause'))
        {
            pauseAudio(e)
            albumSelectContainer.style.pointerEvents = 'all'
        }
        else if (e.target.classList.contains('fa-stop'))
        {
            stopAudio(e)
        }
    }

    

    function updatePlayPauseIconState(e: any)
    {
        if (e.target.classList.contains('fa-play'))
        {
            e.target.classList.remove('fa-play')
            e.target.classList.add('fa-pause')
            currentAlbumImage.classList.add('playing')
        }
        else
        {
            e.target.classList.add('fa-play')
            e.target.classList.remove('fa-pause')
            currentAlbumImage.classList.remove('playing')
        }
    }

    function playAudio(e: any)
    {

        albumAudio.src = `${currentAlbumImage.src.replace('album_covers', 'music').replace('webp', 'mp3')}`
        albumAudio.volume = .6
        albumAudio.play()

        updatePlayPauseIconState(e)
    }

    function pauseAudio(e: any)
    {
        currentAlbumImage.classList.remove('playing')
        albumAudio.pause()
        updatePlayPauseIconState(e)
    }

    function stopAudio(e?: any)
    {
        if (e.target.classList.contains('fa-stop'))
        {
            if(e.target.previousElementSibling.classList.contains('fa-pause'))
            {
                e.target.previousElementSibling.classList.remove('fa-pause')
                e.target.previousElementSibling.classList.add('fa-play') 
            }

            albumAudio.pause()
            albumAudio.currentTime = 0
            
            resetTurntable()
        }
    }

    function resetTurntable()
    {
        currentAlbumImage.src = ''
        currentAlbumImage.classList.remove('playing')
        albumSelectContainer.style.pointerEvents = 'all'
    }
    

    function closeTurntableModal(e: any)
    {
        albumAudio.pause()
        updatePlayPauseIconState(e)
    }
</script>